#summary 第一个教程-ModRoute设计与使用

= 教程01-ModRoute设计与使用 =
本教程介绍此框架的第一个教程，也是入门教程。主要介绍如何使用一个现实了IRoute接口的ModRoute类。<br/> 此类设计和实现依赖没任何Mybatis和Spring的接口。从这个简单实现你可以看出此框架基石的端倪
= 本教程章节： =
http://img02.taobaocdn.com/bao/uploaded/i2/14839030322003106/T1Ze7AFmNaXXXXXXXX_!!723064839-2-pix.png_300x300.jpg
= 详细介绍如下： =
== 1、为何要分库分表== 
当今互联网处理大流量的三板斧：
   * 缓存系统
   * 数据库集群系统
   * 负载均衡系统
当然还有其他小板斧，但这三个是主要的（如果不对请各位见谅）。<br/>BAT（baidu/Alibaba/Tencent）三个寡头都有自己的一套利器和标准，但原理都是一样的。概括一句话：划分而治。<br/>貌似扯远了，回归正题三板斧中有一板斧叫“*数据库集群系统*”，<br/>其基本思想是基就要把一个数据库切分成多个部分放到不同的数据库(server)上，从而缓解单一数据库的性能问题。<br/>其中有数据库横切（水平切分）和纵切（垂直切分），关于切分在CSDN有相关同志已经写了相当详细的介绍，如：[http://blog.csdn.net/column/details/sharding.html 数据库分库分表系列]。<br/>每个业务都有不同的设计来应对各种复杂的环境和流量，本处举个简单的实例：
|| *图一* || *图二* || 
|| http://img01.taobaocdn.com/bao/uploaded/i1/14839030178111439/T1MxIXFkddXXXXXXXX_!!723064839-2-pix.png_300x300.jpg || http://img02.taobaocdn.com/bao/uploaded/i2/14839030173082978/T1.EgwFc8aXXXXXXXX_!!723064839-2-pix.png_300x300.jpg || 
<br/>
图一图二所表示的就是最常用的分库分表方式，<br/>图例用id对128取模，模在0到63在user_0上,落在63到127区间就在user_1库上，<br/>而分表就是落在名为{user_模}表上。<br/>取模能在一定程度上保质数据均匀散列在各个分表上。从而将数据库的压力分散到各个库表中。<br/>

== 2、设计思想、继承关系== 
关于路由信息的接口有一下几个：IRWRoute、IDBRoute、IRoute、AbstractRoute<br/>
默认实现有：ModRoute、MapRoute。具体如图：<br/>


http://img04.taobaocdn.com/bao/uploaded/i4/14839042866824365/T1UxEQFjhdXXXXXXXX_!!723064839-2-pix.png_570x10000.jpg<br/>

== 3、使用说明、举例== 
使用ModRoute只需关注路由配置 和 路由ID。
{{{
public static void main(String[] args) throws Exception {
	ModRoute modRoute = new ModRoute();
	modRoute.parseRouteConfig("user_info.id%16={0~7:user1;8~15:user2}#_%04d");
	modRoute.setRouteId(246L);
	System.out.println(String.format("246L -> TableName   is : %s ",modRoute.getTableName()));
	System.out.println(String.format("246L -> DBGroupName is : %s ",modRoute.getDBGroupName()));
	modRoute.setRouteId(249L);
	System.out.println(String.format("249L -> TableName   is : %s ",modRoute.getTableName()));
	System.out.println(String.format("249L -> DBGroupName is : %s ",modRoute.getDBGroupName()));
}
}}}